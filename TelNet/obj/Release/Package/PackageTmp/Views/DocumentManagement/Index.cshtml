
@model TelNet.Controllers.DocumentManagementController.FolderViewModel

@{
    Layout = "~/Views/DocumentManagement/_LayoutDocument.cshtml";
}


<head>
    <meta charset="UTF+8">


    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/materialize/0.98.2/css/materialize.min.css">
    <link rel="stylesheet" href="https://fonts.googleapis.com/icon?family=Material+Icons">
    <script src="https://code.jquery.com/jquery-3.7.1.js" integrity="sha256-eKhayi8LEQwp4NKxN+CfCh+3qOVUtJn3QNZ0TciWLP4=" crossorigin="anonymous"></script>
    <style>
        body {
            background-color: #f0f0f0;
            font-size: 13px;
        }

        .card,
        .card-panel {
            padding: 15px 20px;
            box-shadow: 0 1px 4px 0 rgba(0, 0, 0, 0.14);
        }

        .container-fluid {
            padding: 1rem 2.5rem;
            margin: auto;
        }

        .row {
            margin: 0 -0.75rem;
        }

        .main {
            position: absolute;
            width: calc(100% - 250px);
            top: 125px;
            margin-left: 200px;
        }

        .subheader {
            color: rgba(0, 0, 0, 0.54);
            font-weight: 500;
        }

        /* nav */
        nav {
            box-shadow: 0 1px 8px rgba(0, 0, 0, 0.3);
        }

            nav ul li {
                text-align: center;
            }

            nav ul.right {
                padding-right: 12px;
            }

                nav ul.right li {
                    max-width: 48px;
                }

            nav ul a {
                padding: 0 12px;
            }

                nav ul a img {
                    height: 32px;
                    width: 32px;
                    vertical-align: middle;
                    margin-left: -5px;
                }

        .nav-wrapper {
            padding-left: 12px;
        }

            .nav-wrapper ul a:hover {
                background-color: transparent;
            }

            .nav-wrapper .title {
                font-size: 1.4rem;
            }

            .nav-wrapper .btn-flat {
                background-color: #4285f4 !important;
                font-size: 13px;
                font-weight: 500;
                height: 30px;
                line-height: 30px;
                width: 94px;
            }

        .nav-2,
        .nav-2 i {
            height: 56px !important;
            line-height: 56px !important;
            min-height: 56px !important;
        }

        .search-wrapper {
            margin: 10px auto 0 170px;
            width: calc(100% - 450px);
            max-width: 650px;
            height: 46px;
            position: fixed;
        }

            .search-wrapper i {
                color: #757575;
                position: absolute;
                font-size: 24px;
                top: 5px;
                left: 24px;
                line-height: 38px !important;
            }

        input[type=search]:not(.browser-default) {
            display: block;
            padding: 11px 8px 11px 72px;
            width: 100%;
            background: #f5f5f5;
            height: 24px;
            border: none;
            font-size: 16px;
            outline: none;
            border-radius: 2px;
            color: #757575;
        }

        input[type=search]:focus {
            border-bottom: none !important;
            box-shadow: none !important;
        }

        input[type=search]::placeholder {
            color: #757575;
        }

        /* sidenav */
        .side-nav.floating {
            width: 250px;
            padding: 12px 8px 0 !important;
            height: calc(100% - 130px);
            left: initial;
            right: initial;
            top: 125px;
            transform: initial;
            z-index: auto;
            margin: 0.5rem 0 1rem 0;
            border-radius: 2px;
            background: transparent;
            box-shadow: none;
        }

        .side-nav .divider {
            margin: 8px 0;
        }

        .side-nav .active {
            background-color: rgba(0, 0, 0, 0.05);
        }

            .side-nav .active a {
                color: #212121;
                font-weight: 500;
            }

        .side-nav .subheader {
            line-height: 24px;
            height: 32px;
            margin: 0;
            padding: 4px 16px;
            color: #616161;
            font-weight: normal;
            font-size: 13px;
        }

        .side-nav li > a,
        .side-nav li > a > i.material-icons {
            height: 40px;
            line-height: 40px;
        }

            .side-nav li > a > i.material-icons {
                margin-right: 24px;
            }

        .side-nav li > a {
            padding: 0 16px;
            font-weight: normal;
            font-size: 13px;
            color: #616161;
        }

            .side-nav li > a:hover {
                border-radius: 2px;
            }

        /* folders */
        .folder {
            width: 185px;
            display: inline-block;
            margin: 15px 20px 15px 0;
            font-weight: 500;
        }

            .folder i {
                color: rgba(0, 0, 0, 0.54);
                margin-top: -3px;
            }

        .context-menu {
            position: absolute;
            z-index: 1000;
            background-color: #fff;
            border: 1px solid #ccc;
            padding: 5px;
            box-shadow: 0 0 5px rgba(0, 0, 0, 0.1);
        }

            .context-menu ul {
                list-style: none;
                padding: 0;
                margin: 0;
            }

                .context-menu ul li {
                    margin: 5px 0;
                }

                    .context-menu ul li a {
                        text-decoration: none;
                        color: #333;
                    }

        .folder-container {
            flex-wrap: wrap;
            justify-content: space-between;
        }


        .file {
            display: flex;
            align-items: center;
            margin-bottom: 10px;
        }

        .subheader {
            font-size: 1.5rem;
            margin-bottom: 10px;
        }
    </style>

    <script>
        window.console = window.console || function (t) { };
    </script>



</head>
<body id="exampleLink">
    <div class="navbar-fixed">
        <nav class="nav-extended white">
            <div class="nav-wrapper white">
                <ul>
                    <li><a href="#!" class="title grey-text text-darken-1" style="font-size: 18px">TeleX Corporation</a></li>
                </ul>
                <div class="search-wrapper">
                    <i class="material-icons">search</i>
                    <input type="search" name="Search" id="searchInput" placeholder="Search Document">
                </div>
                <ul class="right">
                    <li><a href="#!"><i class="material-icons grey-text text-darken-1">apps</i></a></li>
                    <li><a href="#!"><i class="material-icons grey-text text-darken-1">notifications</i></a></li>
                </ul>
            </div>
            <div class="nav-wrapper nav-2">
                <ul>
                    @if (Model.CurrentFolder != null)
                    {
                        <li><a href="#newFolderModal" class="btn btn-secondary modal-trigger">New Folder</a></li>
                        <li>

                            <a href="#newFileModal" class="btn btn-secondary modal-trigger">New File</a>

                        </li>
                    }


                </ul>
                <ul class="right">
                    <li><a href="@Url.Action("Logout","Login")"><i class="material-icons grey-text text-darken-1">exit_to_app</i></a></li>
                </ul>

            </div>
        </nav>

    </div>

    <ul class="side-nav fixed floating transparent z-depth-0">
        <li><a href="#"><i class="material-icons blue-text text-darken-1">dashboard</i>Documents</a></li>
        <li><a href="@Url.Action("Trash","DocumentManagement")"><i class="material-icons">delete</i>Trash</a></li>
        <li><a href="#"><i class="material-icons">people</i>Management</a></li>
        <li><div class="divider"></div></li>
        <li><a href="#"><i class="material-icons">archive</i>Archive</a></li>
        <li><a href="#"><i class="material-icons">cloud</i>Backups</a></li>
    </ul>
    <div class="main">
        <div class="container-fluid" style="padding-left: 5.2rem">
            @if (Model.CurrentFolder != null)
            {
                <a href="@Url.Action("Index", new { folderId = Model.CurrentFolder.ParentFolderId })" class="btn btn-secondary">Back</a>
            }

            <p class="subheader">
                @if (Model.CurrentFolder != null)
                {
                    @:Contents of @Model.CurrentFolder.Name
                }
                else
                {
                    @:Contents
                }
            </p>

            <table class="folder-table">
                <thead>
                    <tr>
                        <th>Item</th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var folder in Model.SubFolders)
                    {
                        bool isDisabled = (folder.Name == "CRM" || folder.Name == "CAS" || folder.Name == "Fico" || folder.Name == "HRM" || folder.Name == "SD");

                        if ((User.IsInRole("LALU") && folder.Name == "CRM" || folder.ParentFolderId == 1) ||
                            (User.IsInRole("TU") && folder.Name == "CAS" || folder.ParentFolderId == 2) ||
                            (User.IsInRole("CAU") && folder.Name == "Fico" || folder.ParentFolderId == 3) ||
                            (User.IsInRole("MCU") && folder.Name == "HRM" || folder.ParentFolderId == 4) ||
                            (User.IsInRole("IAS") && folder.Name == "SD" || folder.ParentFolderId == 5))
                        {
                            <tr data-folder-id="@folder.Id">
                                <td>
                                    <a href="@Url.Action("Index", new { folderId = folder.Id })">
                                        <img src="https://upload.wikimedia.org/wikipedia/commons/thumb/a/a1/Icons8_flat_folder.svg/1024px-Icons8_flat_folder.svg.png" width="30px" class="folder-icon" style="display: inline-block; vertical-align: middle;" /> -
                                        <span style="display: inline-block; vertical-align: middle;">@folder.Name</span>
                                    </a>
                                </td>
                                <td class="action-buttons">
                                    <button type="button" class="btn btn-secondary btn-rename" @(isDisabled ? "disabled" : "")>Rename</button>
                                    <button type="button" class="btn btn-danger btn-delete" @(isDisabled ? "disabled" : "")>Delete</button>
                                </td>
                            </tr>
                        }
                    }


                    @if (Model.Files != null && Model.Files.Any())
                    {
                        foreach (var file in Model.Files)
                        {
                            if (!file.IsDeleted && (User.IsInRole("LALU") ||
                                User.IsInRole("TU") ||
                                User.IsInRole("CAU") ||
                                User.IsInRole("MCU") ||
                                User.IsInRole("IAS")))
                            {
                                <tr data-file-id="@file.Id">
                                    <td>
                                        <i class="material-icons left file-icon">insert_drive_file</i> @file.Name
                                    </td>
                                    <td class="action-buttons">
                                        <button type="button" class="btn btn-secondary btn-rename-file">Rename</button>
                                        <button type="button" class="btn btn-danger btn-delete-file">Delete</button>
                                    </td>
                                </tr>
                            }
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="2"></td>
                        </tr>
                    }

                </tbody>
            </table>

            <form id="deleteForm" action="@Url.Action("DeleteFolder", "DocumentManagement")" method="post" style="display: none;">
                <input type="hidden" id="deleteFolderId" name="folderId" value="" />
            </form>

            <form id="renameForm" action="@Url.Action("RenameFolder", "DocumentManagement")" method="post" style="display: none;">
                <input type="hidden" id="renameFolderId" name="folderId" value="" />
                <input type="hidden" id="newFolderName" name="newName" value="" />
            </form>

            <form id="deleteFileForm" action="@Url.Action("DeleteFile", "DocumentManagement")" method="post" style="display: none;">
                <input type="hidden" id="deleteFileId" name="fileId" value="" />
            </form>

            <form id="renameFileForm" action="@Url.Action("RenameFile", "DocumentManagement")" method="post" style="display: none;">
                <input type="hidden" id="renameFileId" name="fileId" value="" />
                <input type="hidden" id="newFileName" name="newName" value="" />
            </form>
        </div>
    </div>




    <!-- New Folder Modal -->
    <div id="newFolderModal" class="modal">
        <div class="modal-content">
            <h4>Create New Folder</h4>
            <form action="@Url.Action("CreateFolder", "DocumentManagement")" method="post">
                <input type="hidden" name="parentFolderId" value="@Model.CurrentFolder?.Id" />
                <div class="input-field">
                    <input type="text" name="folderName" id="folderName" class="validate" required>
                    <label for="folderName">Folder Name</label>
                </div>
                <button type="submit" class="btn btn-primary">Create Folder</button>
            </form>
        </div>
        <div class="modal-footer">
            <a href="#!" class="modal-close waves-effect waves-green btn-flat">Close</a>
        </div>
    </div>

    <!-- New File Modal -->
    <div id="newFileModal" class="modal">
        <div class="modal-content">
            <h4>Create New File</h4>
            <form action="@Url.Action("CreateFile", "DocumentManagement")" method="post">
                @if (Model.CurrentFolder != null)
                {
                    <input type="hidden" name="folderId" value="@Model.CurrentFolder.Id" />
                }
                <div class="input-field">
                    <input type="text" name="fileName" id="fileName" class="validate" required>
                    <label for="fileName">File Name</label>
                </div>
                <button type="submit" class="btn btn-primary">Create File</button>
            </form>
        </div>
        <div class="modal-footer">
            <a href="#!" class="modal-close waves-effect waves-green btn-flat">Close</a>
        </div>
    </div>


</body>
<script src="https://cdnjs.cloudflare.com/ajax/libs/materialize/0.98.2/js/materialize.min.js"></script>
<script>
   $(document).ready(function () {
        $('.modal').modal();

        // Click event handler for folder Rename button
        $('.btn-rename').on('click', function () {
            var folderRow = $(this).closest('tr');
            var folderId = folderRow.data('folder-id');
            var newName = prompt('Enter the new name for the folder:');
            if (newName !== null && newName.trim() !== '') {
                renameFolder(folderId, newName);
            }
        });

        // Click event handler for folder Delete button
        $('.btn-delete').on('click', function () {
            var folderRow = $(this).closest('tr');
            var folderId = folderRow.data('folder-id');
            if (confirm('Are you sure you want to delete this folder?')) {
                deleteFolder(folderId);
            }
        });

        // Click event handler for file Rename button
        $('.btn-rename-file').on('click', function () {
            var fileRow = $(this).closest('tr');
            var fileId = fileRow.data('file-id');
            var newName = prompt('Enter the new name for the file:');
            if (newName !== null && newName.trim() !== '') {
                renameFile(fileId, newName);
            }
        });

        // Click event handler for file Delete button
        $('.btn-delete-file').on('click', function () {
            var fileRow = $(this).closest('tr');
            var fileId = fileRow.data('file-id');
            if (confirm('Are you sure you want to delete this file?')) {
                deleteFile(fileId);
            }
        });

        // Function to delete a folder
        function deleteFolder(folderId) {
            $.ajax({
                url: '@Url.Action("DeleteFolder", "DocumentManagement")',
                type: 'POST',
                data: { folderId: folderId },
                success: function (response) {
                    if (response.success) {
                        location.reload(); // Reload the page to reflect the changes
                    } else {
                        alert('Failed to delete the folder.');
                    }
                },
                error: function () {
                    alert('Error occurred while deleting the folder.');
                }
            });
        }

        // Function to rename a folder
        function renameFolder(folderId, newName) {
            $.ajax({
                url: '@Url.Action("RenameFolder", "DocumentManagement")',
                type: 'POST',
                data: { folderId: folderId, newName: newName },
                success: function (response) {
                    if (response.success) {
                        location.reload(); // Reload the page to reflect the changes
                    } else {
                        alert('Failed to rename the folder.');
                    }
                },
                error: function () {
                    alert('Error occurred while renaming the folder.');
                }
            });
        }

        // Function to delete a file
        function deleteFile(fileId) {
            $.ajax({
                url: '@Url.Action("DeleteFile", "DocumentManagement")',
                type: 'POST',
                data: { fileId: fileId },
                success: function (response) {
                    if (response.success) {
                        location.reload(); // Reload the page to reflect the changes
                    } else {
                        location.reload();
                    }
                },
                error: function () {
                    alert('Error occurred while deleting the file.');
                }
            });
        }

        // Function to rename a file
        function renameFile(fileId, newName) {
            $.ajax({
                url: '@Url.Action("RenameFile", "DocumentManagement")',
                type: 'POST',
                data: { fileId: fileId, newName: newName },
                success: function (response) {
                    if (response.success) {
                        location.reload(); // Reload the page to reflect the changes
                    } else {
                        location.reload();
                    }
                },
                error: function () {
                    alert('Error occurred while renaming the file.');
                }
            });
        }
   });

    $('#searchInput').on('input', function () {
        var searchText = $(this).val().toLowerCase();
        // Filter folders
        $('.folder-table tbody tr').each(function () {
            var folderName = $(this).find('a').text().toLowerCase();
            if (folderName.includes(searchText)) {
                $(this).show();
            } else {
                $(this).hide();
            }
        });
        // Filter files
        $('.folder-table tbody tr').each(function () {
            var fileName = $(this).find('td:first-child').text().toLowerCase();
            if (fileName.includes(searchText)) {
                $(this).show();
            } else {
                $(this).hide();
            }
        });
    });
</script>

